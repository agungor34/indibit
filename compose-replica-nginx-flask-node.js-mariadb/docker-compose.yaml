name: MyAp

services:

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app1
      # - app2
    networks:
      - frontnet

  app1:
    image: mycon
    deploy:
      replicas: 2
    restart: always
    build:
      context: ./app1
    environment: ["DATABASE_URL=maria_db://root:password@db/flask_app"]
    secrets: ["db-password"]
    depends_on: ["db"]
    networks:
      - backnet
      - frontnet

  node_app:
    image: nodecon
    deploy:
      replicas: 2
    restart: always
    build:
      context: ./node_app
    environment:
      - DATABASE_URL=maria_db://root:password@db/flask_app
      - NODE_ENV=development
    secrets: ["db-password"]
    depends_on: ["db"]
    ports:
      - ":3232"
    networks:
      - backnet
      - frontnet

  db:
    image: mariadb:latest
    container_name: maria_db
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mariadb-admin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
      #- db-data:/var/lib/mysql
    networks:
      - backnet
    environment:
      - MYSQL_DATABASE=flask_app
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 3306:3306

volumes:
  mysql_data:  # Volume tanımlaması burada
    driver: local
secrets:
  db-password:
    file: db/password.txt

networks:
  backnet:
  frontnet:


